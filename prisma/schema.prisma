// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ANALYST
  OPERATOR
  ADMIN
}

model Shipment {
  id            String   @id @default(cuid())
  routeId       String
  driverName    String
  expectedETA   DateTime
  actualETA     DateTime?
  routeStatus   String   @default("in-progress")
  // Optional telemetry fields for richer route context
  origin        String?
  destination   String?
  gpsOnline     Boolean?
  lastKnownAt   DateTime?
  lastKnownLat  Float?
  lastKnownLng  Float?
  speedKph      Int?
  headingDeg    Int?
  // Cargo details
  cargoName      String?
  cargoQuantity  Int?
  cargoUnitCost  Float?
  cargoTotalValue Float?
  // Predictive scheduling fields
  predictedDelay Float?  // Predicted delay in minutes
  lastUpdated   DateTime @updatedAt
  createdAt     DateTime @default(now())
}

model Alert {
  id          String   @id @default(cuid())
  shipmentId  String
  type        String
  severity    String
  description String
  createdAt   DateTime @default(now())
  feedback    AlertFeedback?
}

model AlertFeedback {
  id                    String   @id @default(cuid())
  alertId               String   @unique
  alert                 Alert    @relation(fields: [alertId], references: [id], onDelete: Cascade)
  riskScoreAccurate     Boolean  // Was the risk score appropriate?
  attackTypeCorrect     Boolean  // Was the attack type identified correctly?
  actualAttackType      String?  // If wrong, what was the actual type?
  actualRiskScore       Int?     // What should the risk score have been? (0-100)
  notes                 String?  // Additional feedback notes
  // Value preference for non-economic priority: 'higher' or 'lower'
  valuePreference       String?  // 'higher' | 'lower'
  // Store original analysis for learning
  aiRiskScore           Int      // Original AI risk score
  aiAttackType          String   // Original AI attack type
  shipmentContext       String   // JSON: delay, telemetry, scenario
  createdAt             DateTime @default(now())
}

model Analysis {
  id                 String   @id @default(cuid())
  shipmentId         String
  routeId            String
  driverName         String
  riskScore          Int      // 0-100
  alertType          String   // Attack type or NORMAL_OPERATION
  severity           String   // high/medium/low
  description        String
  shipmentContext    String   // JSON: delay, telemetry, scenario for feedback
  analyzed           Boolean  @default(true)
  source             String?  // 'openrouter' or 'fallback'
  createdAt          DateTime @default(now())
  feedback           AnalysisFeedback?
}

model AnalysisFeedback {
  id                    String   @id @default(cuid())
  analysisId            String   @unique
  analysis              Analysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)
  riskScoreAccurate     Boolean
  attackTypeCorrect     Boolean
  actualAttackType      String?
  actualRiskScore       Int?
  notes                 String?
  // Value preference for non-economic priority: 'higher' or 'lower'
  valuePreference       String?
  createdAt             DateTime @default(now())
}

model User {
  id              String             @id @default(cuid())
  email           String?            @unique
  phone           String?            @unique
  name            String?
  agentActive     Boolean            @default(false)
  createdAt       DateTime           @default(now())
  verificationCodes VerificationCode[]
  role            Role               @default(ANALYST)
}

model VerificationCode {
  id        String   @id @default(cuid())
  code      String
  expiresAt DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model AgentActivity {
  id              String   @id @default(cuid())
  userId          String
  activityType    String   // "analysis", "monitoring", "idle", "threat_detected", "system_check"
  status          String   // "started", "processing", "completed", "failed"
  targetShipment  String?  // shipmentId being analyzed
  description     String
  metadata        String?  // JSON string for additional data
  startTime       DateTime @default(now())
  endTime         DateTime?
  duration        Int?     // milliseconds
  createdAt       DateTime @default(now())
}
