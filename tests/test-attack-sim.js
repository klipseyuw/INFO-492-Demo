import axios from 'axios';

async function testAttackSimulation() {
  console.log('\n🔬 Testing Attack Simulation & Detection...');
  const userId = 'user-1';
  // Ensure agent is active
  await axios.post('http://localhost:3000/api/agent/toggle', { userId, activate: true });
  const beforeAlerts = await axios.get('http://localhost:3000/api/alerts');
  const initialCount = beforeAlerts.data.alerts?.length || 0;

  const resp = await axios.post('http://localhost:3000/api/simulate-attack', { userId });
  console.log('Simulation response summary:', {
    scenario: resp.data.scenario?.type,
    agentActive: resp.data.agentActive,
    defenseRisk: resp.data.defenseAnalysis?.riskScore,
    defenseType: resp.data.defenseAnalysis?.alertType,
  });

  // Small delay to allow alert persistence
  await new Promise(r => setTimeout(r, 500));
  const afterAlerts = await axios.get('http://localhost:3000/api/alerts');
  const newCount = afterAlerts.data.alerts?.length || 0;

  if (newCount > initialCount) {
    console.log('✅ Alert generated by simulate-attack flow.');
  } else {
    console.log('⚠️ No new alert detected (may be low risk scenario)');
  }
}

if (import.meta.url === `file://${process.argv[1]}`) {
  testAttackSimulation().catch(e => { console.error('❌ Attack simulation test failed', e.response?.data || e.message); });
}

export { testAttackSimulation };
